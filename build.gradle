plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'com.todayworker.springboot'
version '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.logging.log4j') {
            details.useVersion '2.17.1'
        }
    }
}

dependencies {
    implementation(platform("org.apache.logging.log4j:log4j-bom:2.17.1"))
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    compileOnly 'org.projectlombok:lombok'
    implementation 'com.google.code.gson:gson' // gson
    implementation 'commons-beanutils:commons-beanutils:1.9.3' //commons-beanutils
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.2'

    implementation 'org.mariadb.jdbc:mariadb-java-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'    // 인메모리 관계형 DB
    testImplementation "org.testcontainers:elasticsearch:1.15.3"
    testImplementation "org.testcontainers:junit-jupiter:1.15.3"

    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.springfox:springfox-boot-starter:3.0.0' // for swagger
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    imageName = "docker.io/lib/todayworker-app"
}